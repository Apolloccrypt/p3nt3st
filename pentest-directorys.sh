#!/bin/bash

# Exit on any error
set -e

# Base directory
BASE_DIR="pentest-directory"

# Create directory structure
mkdir -p $BASE_DIR
mkdir -p $BASE_DIR/tools/nmap
mkdir -p $BASE_DIR/tools/metasploit
mkdir -p $BASE_DIR/tools/burpsuite
mkdir -p $BASE_DIR/scripts/recon
mkdir -p $BASE_DIR/scripts/exploitation
mkdir -p $BASE_DIR/docs

# Create README.md
cat << 'EOF' > $BASE_DIR/README.md
# Pentest Directory

This directory contains tools, scripts, and documentation for performing security pentests.

## Tools

- Nmap
- Metasploit
- Burp Suite
- ...

## Scripts

- Reconnaissance
- Exploitation
- ...

## Documentation

- Methodology
- Reporting Template
- ...
EOF

# Create LICENSE
cat << 'EOF' > $BASE_DIR/LICENSE
MIT License

[Your License Text Here]
EOF

# Create install_nmap.sh
cat << 'EOF' > $BASE_DIR/tools/nmap/install_nmap.sh
#!/bin/bash

# Update and install Nmap
sudo apt-get update
sudo apt-get install -y nmap
EOF

chmod +x $BASE_DIR/tools/nmap/install_nmap.sh

# Create install_metasploit.sh
cat << 'EOF' > $BASE_DIR/tools/metasploit/install_metasploit.sh
#!/bin/bash

# Install Metasploit
curl https://raw.githubusercontent.com/rapid7/metasploit-framework/master/scripts/msfupdate | sudo bash
EOF

chmod +x $BASE_DIR/tools/metasploit/install_metasploit.sh

# Create install_burpsuite.sh
cat << 'EOF' > $BASE_DIR/tools/burpsuite/install_burpsuite.sh
#!/bin/bash

# Install Burp Suite (Community Edition)
sudo apt-get update
sudo apt-get install -y openjdk-11-jdk
wget https://portswigger.net/burp/releases/download?product=community&version=2023.2.1&type=jar -O burpsuite.jar
echo "Burp Suite Community Edition has been downloaded as burpsuite.jar"
EOF

chmod +x $BASE_DIR/tools/burpsuite/install_burpsuite.sh

# Create subdomain_enum.sh
cat << 'EOF' > $BASE_DIR/scripts/recon/subdomain_enum.sh
#!/bin/bash

# Check for domain argument
if [ -z "\$1" ]; then
  echo "Usage: \$0 <domain>"
  exit 1
fi

DOMAIN=\$1

# Subdomain enumeration with Sublist3r
sublist3r -d \$DOMAIN -o subdomains.txt

echo "Subdomain enumeration completed. Results saved in subdomains.txt."
EOF

chmod +x $BASE_DIR/scripts/recon/subdomain_enum.sh

# Create port_scan.sh
cat << 'EOF' > $BASE_DIR/scripts/recon/port_scan.sh
#!/bin/bash

# Check for target argument
if [ -z "\$1" ]; then
  echo "Usage: \$0 <target>"
  exit 1
fi

TARGET=\$1

# Port scanning with Nmap
nmap -p- -sV \$TARGET -oN port_scan.txt

echo "Port scanning completed. Results saved in port_scan.txt."
EOF

chmod +x $BASE_DIR/scripts/recon/port_scan.sh

# Create exploit_script.py
cat << 'EOF' > $BASE_DIR/scripts/exploitation/exploit_script.py
#!/usr/bin/env python3

import sys

def exploit(target):
    print(f"Running exploit against {target}")
    # Exploit code here

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(f"Usage: {sys.argv[0]} <target>")
        sys.exit(1)
    
    target = sys.argv[1]
    exploit(target)
EOF

# Create methodology.md
cat << 'EOF' > $BASE_DIR/docs/methodology.md
# Pentesting Methodology

## Reconnaissance

- Subdomain enumeration
- Port scanning
- ...

## Exploitation

- Vulnerability assessment
- Exploit development
- ...
EOF

# Create reporting_template.md
cat << 'EOF' > $BASE_DIR/docs/reporting_template.md
# Pentest Report

## Executive Summary

...

## Scope

...

## Findings

...

## Recommendations

...
EOF

echo "Pentest directory structure has been created."
